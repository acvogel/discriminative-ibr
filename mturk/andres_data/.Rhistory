hist(differences)
mean(secondDifferences)
mean(differences)
cor(topScorers)
colnames(topScorers) = c("first", "second", "third")
head(topScorers)
numberOfInstancesInBucket = 100
numberOfBuckets = 10000
topScorers = matrix(0, numberOfBuckets, 3)
differences = c()
secondDifferences = c()
for (i in 1:numberOfBuckets) {
instances = rnorm(numberOfInstancesInBucket)*16 + 100
sortedInstances = sort(instances, decreasing = TRUE)
thisDifference = sortedInstances[1] - sortedInstances[2]
differences = c(differences, thisDifference)
thisSecondDifference = sortedInstances[2] - sortedInstances[3]
secondDifferences = c(secondDifferences, thisSecondDifference)
topScorers[i,] = sortedInstances[1:3]
}
hist(secondDifferences)
hist(differences)
mean(secondDifferences)
mean(differences)
hist(secondDifferences)
numberOfInstancesInBucket = 1000
numberOfBuckets = 10000
topScorers = matrix(0, numberOfBuckets, 3)
differences = c()
secondDifferences = c()
for (i in 1:numberOfBuckets) {
instances = rnorm(numberOfInstancesInBucket)*16 + 100
sortedInstances = sort(instances, decreasing = TRUE)
thisDifference = sortedInstances[1] - sortedInstances[2]
differences = c(differences, thisDifference)
thisSecondDifference = sortedInstances[2] - sortedInstances[3]
secondDifferences = c(secondDifferences, thisSecondDifference)
topScorers[i,] = sortedInstances[1:3]
}
hist(secondDifferences)
hist(differences)
n = 100
average_D = 3.8
average_E = 3.0
SP_DE = 55.2
SS_D = 401.1
SS_E = 134.4
r_DE = SP_DE / sqrt(SS_D * SS_D)
print(r_DE)
t = r_DE*sqrt((n-2)/(1-r_DE^2))
significanceOft = pt(-t, df = n-2)
print(significanceOft)
b = SP_DE / SS_E
a = average_D - b*average_E
b
a
5^2/2
20/300000
1 - 20/300000
100*(1 - 20/300000)
qnorn(2)
pnorm(2)
pnorm(4)
pnorm(3.5)
pnorm(3.8)
pnorm(3.9)
pnorm(3.85)
pnorm(3.83)
pnorm(3.82
)
pnorm(3.82)
100 + 16*3.82
5^2*2
5^4
5^23
5^23456
5^234
MSE = SS_D/n + average_D^2/n - 2*a*average_D - 2*b*SP_DE + 2*b*average_D*average_E + a^2 - 2*a*b*average_E + b^2*SS_E/n + b^2*average_E^2/n
standard_error_of_prediction = sqrt(MSE)
MSE
event_score = 5
estimated_depression_score = a*event_score + b
estimated_depression_score
pnorm(3)
qnorm(0.95)
qnorm(0.9)
qnorm(0.5)
qnorm(0.95)
SE_est = sqrt(MSE)
SE_est = 1
qnorm(.95)
lowerCongInteval = estimated_depression_score - qnorm(.95)*SE_est
upperCongInteval = estimated_depression_score + qnorm(.95)*SE_est
lowerCongInteval
upperCongInteval
estimated_depression_score
SE_est = 4
event_score = 5
estimated_depression_score = a*event_score + b
lowerCongInteval = estimated_depression_score - qnorm(.95)*SE_est
upperCongInteval = estimated_depression_score + qnorm(.95)*SE_est
upperCongInteval
lowerCongInteval
matrix(c(1, 2, 3, 4, 5, 6), ncol = 3)
matrix(c(47, 132, 62, 83, 86, 53, 28, 14, 227, 49, 44, 9), ncol = 3)
colnames(heart_study) = c("0", "1", "mult")
heart_study = matrix(c(47, 132, 62, 83, 86, 53, 28, 14, 227, 49, 44, 9), ncol = 3)
colnames(heart_study) = c("0", "1", "mult")
rownames(heart_study) = c("m+", "m-", "f+", "f-")
heart_study
heart_study$m+
""
heart_study$"m+"
heart_study[1,]
heart_study[1:2,]
sum(heart_study[1:2,])
sum(heart_study[1,])
sum(heart_study[2,])
sum(c(47, 132, 62, 83, 86, 53, 28, 14, 227, 49, 44, 9))
total = sum(heart_study[1:4,])
total
p_male = sum(heart_study[1:2,]) / total
p_male = sum(heart_study[1:2,]) / total; print(p_male)
p_positive_give_male = sum(heart_study[1,]) / sum(heart_study[1:2,])
p_positive_give_male = sum(heart_study[1,]) / sum(heart_study[1:2,]); print(p_positive_give_male)
heart_study
p_positive_give_female = sum(heart_study[3,]) / sum(heart_study[3:4,]); print(p_positive_give_female)
p_male
p_positive_give_male
p_positive_give_female = sum(heart_study[3,]) / sum(heart_study[3:4,]); print(p_positive_give_female)
heart_study$h = c(1, 2, 3, 4)
as.data.frame(heart_study)
heart_study
heart_study = matrix(c(47, 132, 62, 83, 86, 53, 28, 14, 227, 49, 44, 9), ncol = 3)
colnames(heart_study) = c("0", "1", "mult")
rownames(heart_study) = c("m+", "m-", "f+", "f-")
heart_study
heart_study[,1]
heart_study[,2]
heart_study[,3]
heart_study[,4]
heart_study
heart_study[1,]
heart_study[,1]
heart_study[1:2,2]
sum(heart_study[1:2,2])
heart_study[1:2,2]
heart_study[3,1:2]
heart_study[3,]
heart_study
heart_study[1,2:3]
c(heart_study[,1], sum(heart_study[1,2:3]), sum(heart_study[2,2:3]), sum(heart_study[3,2:3]), sum(heart_study[4,2:3]) )
heart_simplified = matrix(c(heart_study[,1], sum(heart_study[1,2:3]), sum(heart_study[2,2:3]), sum(heart_study[3,2:3]), sum(heart_study[4,2:3]) ), ncol = 2)
heart_simplified
heart_study
colnames(heart_simplified) = c(0, 1)
heart_study
heart_simplified
rownames(heart_simplified) = = c("m+", "m-", "f+", "f-")
rownames(heart_simplified) = c("m+", "m-", "f+", "f-")
heart_simplified
summary(heart_simplified)
heart_simplified[1:2, 1:2]
heart_simplified[3:4, 1:2]
males_heart = heart_simplified[1:2, 1:2]
females_heart = heart_simplified[3:4, 1:2]
chisq.test(males_heart)
chisq.test(females_heart)
chisq.test(males_heart)[0]
chisq.test(males_heart)[1]
chi_male
chi_male = chisq.test(males_heart)[1]
chi_male
sum(males_heart)
males_heart
sum(males_heart[1])
sum(males_heart[1,])
sum(males_heart[2,])
phi_male = sqrt(chi_male / sum(males_heart))
sum(males_heart)
chi_male
chi_male[1]
chi_male[1]$X-squared
chisq.test(males_heart)
chisq.test(males_heart)$X-squared
chisq.test(males_heart)$"X-squared""
""
chisq.test(males_heart)$"X-squared"
chisq.test(males_heart)[[1]]
chisq.test(males_heart)[[[1]]]
chisq.test(males_heart)[[1]]
chi_male = chisq.test(males_heart)[[1]]
phi_male = sqrt(chi_male / sum(males_heart))
chi_female = chisq.test(females_heart)[[1]]
phi_male = sqrt(chi_male / sum(males_heart))
chi_female = chisq.test(females_heart)[[1]]
phi_female = sqrt(chi_female / sum(females_heart))
```
phi_male
phi_female
males_heart
sum(males_heart)
sum(females_heart)
pearsons_c_male = sqrt((chi_male / sum(males_heart)) / (1 + chi_male / sum(males_heart)))
source('~/.active-rstudio-document', echo=TRUE)
chi_male
(chi_male / sum(males_heart))
0.2096995 / (1 + 0.2096995)
(chi_male / sum(males_heart))
(chi_male / sum(males_heart)) / (1 + chi_male / sum(males_heart))
sqrt( ((chi_male / sum(males_heart)) / (1 + chi_male / sum(males_heart)))
)
pearsons_c_male = sqrt((chi_male / sum(males_heart)) / (1 + chi_male / sum(males_heart)))
pearsons_c_male
chi_male.value
chi_male[1]
chi_male[[1]]
chi_male = chisq.test(males_heart)[[1]][[1]]
chi_male
chi_female = chisq.test(females_heart)[[1]][[1]]
phi_male = sqrt(chi_male / sum(males_heart)); print(phi_male)
phi_female = sqrt(chi_female / sum(females_heart)); print(phi_female)
pearsons_c_male = sqrt((chi_male / sum(males_heart)) / (1 + chi_male / sum(males_heart)));
pearsons_c_female = sqrt((chi_female / sum(females_heart)) / (1 + chi_female / sum(females_heart)));
pearsons_c_male = sqrt((chi_male / sum(males_heart)) / (1 + chi_male / sum(males_heart))); print(pearsons_c_male)
pearsons_c_female = sqrt((chi_female / sum(females_heart)) / (1 + chi_female / sum(females_heart))); print(pearsons_c_female)
Yule_Q_male = (males_heart[1,1]*males_heart[2,2] - males_heart[1,2]*males_heart[2,1]) / (males_heart[1,1]*males_heart[2,2] + males_heart[1,2]*males_heart[2,1])
Yule_Q_male = (males_heart[1,1]*males_heart[2,2] - males_heart[1,2]*males_heart[2,1]) / (males_heart[1,1]*males_heart[2,2] + males_heart[1,2]*males_heart[2,1]); print(Yule_Q_male)
Yule_Q_female = (females_heart[1,1]*females_heart[2,2] - females_heart[1,2]*females_heart[2,1]) / (females_heart[1,1]*females_heart[2,2] + females_heart[1,2]*females_heart[2,1]); print(Yule_Q_female)
?power.t.test
power.t.test(delta=.2, sd=.4962,power=.7, type='two.sample', alternative='two.sided')
dd = c(1, 2)
ddd = c(10, 100)
dd*ddd
dd = c(.5, .5)
sum(dd*ddd)
Xi = c(1, 3, 5, 7)
Pi = c(.3, .4, .2, .1)
expected_cost = sum(Xi*Pi)
expected_cost = sum(Xi*Pi)l print(expected_cost)
source('~/.active-rstudio-document', echo=TRUE)
expected_cost = sum(Xi*Pi); print(expected_cost)
Xi - expected_cost
(Xi - expected_cost)*Pi
(Xi - expected_cost)^2*Pi
sum(Xi - expected_cost)^2*Pi)
sum((Xi - expected_cost)^2*Pi)
expected_cost = sum(Xi*Pi); print(expected_cost)
variance_x = sum((Xi - expected_cost)^2*Pi); print(variance_x)
expected_cost_of_16_patients = 16*expected_cost; print(expected_cost_of_16_patients)
expected_cost
variance_of_T = 16*variance_x; print(variance_of_T)
standard_deviation_of_T = sqrt(variance_of_T); print(standard_deviation_of_T)
expected_cost_of_16_patients_T
expected_cost_of_16_patients_T = 16*expected_cost; print(expected_cost_of_16_patients_T)
expected_cost_of_16_patients_T
Xi = c(1, 3, 5, 7)*100
Pi = c(.3, .4, .2, .1)
expected_cost = sum(Xi*Pi); print(expected_cost)
variance_x = sum((Xi - expected_cost)^2*Pi); print(variance_x)
expected_cost_of_16_patients_T = 16*expected_cost; print(expected_cost_of_16_patients_T)
variance_of_T = 16*variance_x; print(variance_of_T)
standard_deviation_of_T = sqrt(variance_of_T); print(standard_deviation_of_T)
mean_to_budget = 6000 - expected_cost_of_16_patients_T
mean_to_budget
source('~/.active-rstudio-document', echo=TRUE)
z_to_exceed_budged = mean_to_budget / standard_deviation_of_T
z_to_exceed_budged
?pnorm
pnorm(2)
pnorm(z_to_exceed_budged)
1 - pnorm(z_to_exceed_budged)
probability_of_exceeding_budget = 1 - pnorm(z_to_exceed_budged)
qnorm(.95)
z_to_95_confidence = qnorm(0.95)
z_to_95_confidence = qnorm(0.95)
above_mean_for_95 = z_to_95_confidence*standard_deviation_of_T
budget_for_95_confidence = mean_to_budget + above_mean_for_95; print(budget_for_95_confidence)
budget_for_95_confidence = expected_cost_of_16_patients_T + above_mean_for_95; print(budget_for_95_confidence)
qchisq(.95, df=3)
pchisq(1.01, df = 3)
pchisq(3.67, df = 3)
pchisq(1113.67, df = 3)
X_in_range_given_below = (pchisq(3.67, df = 3) - pchisq(1.01, df = 3)) / pchisq(3.67, df = 3); print(X_in_range_given_below)
probability_of_3_to_6_heads =  pbinom(6,10,.5) - pbinom(2,10,.5)
probability_of_3_to_6_heads =  pbinom(6,10,.5) - pbinom(2,10,.5); print(probability_of_3_to_6_heads)
cellphone = .1 + .8*.25
cellphone = .1 + .8*.25; print(cellphone)
biv = matrix(c(.1, .3,  .1, .5), ncol = 2)
rownames(biv) = c("A", "not_A")
colnames(biv) = c("cell", "not_cell")
biv
.1 / .6
50*.4
sd1 = sqrt(8225.8/size)
size = 25
m1 = 56.9
m0 = 38.2
sd1 = sqrt(8225.8/size)
sd0 = sqrt(6995.4/size)
denom = sqrt(sd1/size + sd0/size)
t = (m1 - m2)/denom
degreesOfFreedom = 2*size - 2
pvalueSignificance = pt(-t, df = degreesOfFreedom)
print(pvalueSignificance)
degreesOfFreedom = size - 2
pvalueSignificance = pt(-t, df = degreesOfFreedom)
print(pvalueSignificance)
t = (m1 - m2)/denom
t
degreesOfFreedom = 2*size - 2
sd1
sd0
rnorm(4)
rnorm(25, 1)
rnorm(25, 1, 5)
rnorm(25, 1, 50)
rnorm(25, m1, sd1)
mean(rnorm(25, m1, sd1))
mean(rnorm(25, m1, sd1))
mean(rnorm(25, m1, sd1))
mean(rnorm(25, m1, sd1))
mean(rnorm(25, m1, sd1))
mean(rnorm(25, m1, sd1))
mean(rnorm(25, m1, sd1))
mean(rnorm(25, m1, sd1))
mean(rnorm(25, m1, sd1))
mean(rnorm(25, m1, sd1))
mean(rnorm(25, m1, sd1))
mean(rnorm(25, m1, sd1))
mean(rnorm(25, m1, sd1))
mean(rnorm(25, m1, sd1))
mean(rnorm(25, m1, sd1))
mean(rnorm(25, m1, sd1))
mean(rnorm(25, m1, sd1))
degreesOfFreedom = 2*size - 2
pvalueSignificance = pt(-t, df = degreesOfFreedom)
print(pvalueSignificance)
SSf1 = 8225.8
SSf0 = 6995.4
SP = 5521.3
r = SP / sqrt(SSf1 * SSf0)
r
t = r*sqrt((size*2-2)/(1-r^2))
t
significanceOft = pt(-t, df = size*2-2)
print(significanceOft)
t = r*sqrt((size-2)/(1-r^2))
t
significanceOft = pt(-t, df = size-2)
print(significanceOft)
b = SP / SSf0
b
a = m1 - b*m0
a
standard_errpr = 18/6
standard_err0r = 18/sqrt(36)
standard_error = 18/sqrt(36)
standard_error
source('~/.active-rstudio-document', echo=TRUE)
c1
pnorm(5)
(h1 - c1) / standard_error
z_difference = (h1 - c1) / standard_error
pnorm(z_difference)
pnorm(-z_difference)
n = 36
h0 = 0
h1 = 8
standard_error = 18/sqrt(n)
c1 = qnorm(.025, mean=0, sd=standard_error, lower.tail=F)
z_difference = (h1 - c1) / standard_error
n = 36
h0 = 0
h1 = 8
standard_error = 18/sqrt(n)
c1 = qnorm(.025, mean=0, sd=standard_error, lower.tail=F)
z_difference = (h1 - c1) / standard_error
print(pnorm(z_difference))
n = 34
h0 = 0
h1 = 8
standard_error = 18/sqrt(n)
c1 = qnorm(.025, mean=0, sd=standard_error, lower.tail=F)
z_difference = (h1 - c1) / standard_error
print(pnorm(z_difference))
n = 30
h0 = 0
h1 = 8
standard_error = 18/sqrt(n)
c1 = qnorm(.025, mean=0, sd=standard_error, lower.tail=F)
z_difference = (h1 - c1) / standard_error
print(pnorm(z_difference))
print(pnorm(z_difference))
n = 31
h0 = 0
h1 = 8
standard_error = 18/sqrt(n)
c1 = qnorm(.025, mean=0, sd=standard_error, lower.tail=F)
z_difference = (h1 - c1) / standard_error
print(pnorm(z_difference))
n = 32
h0 = 0
h1 = 8
standard_error = 18/sqrt(n)
c1 = qnorm(.025, mean=0, sd=standard_error, lower.tail=F)
z_difference = (h1 - c1) / standard_error
print(pnorm(z_difference))
n = 31
h0 = 0
h1 = 8
standard_error = 18/sqrt(n)
c1 = qnorm(.025, mean=0, sd=standard_error, lower.tail=F)
z_difference = (h1 - c1) / standard_error
print(pnorm(z_difference))
0.6*0.4*2
pbinom(1,2, .5)
pbinom(1,1, .5)
pbinom(1,1, .1)
pbinom(0,1, .1)
pbinom(1,2, .1)
pbinom(2,2, .1)
pbinom(1,2, .1)
pbinom(0,1, .6)
pbinom(0,1, .6)
pbinom(0,5, .4)
pbinom(0,5, .6)
pbinom(0,5, .4)
pbinom(8,12, .4)
pbinom(11,12, .4)
pbinom(11,12, .9)
pbinom(1,2, .5)
pbinom(1,2, .1)
pbinom(8,12, .4)
pbinom(2,2, .1)
pbinom(0,2, .1)
pbinom(4,12, .6)
pbinom(3,12, .6)
1-pbinom(3,12, .6)
pbinom(8,12, .4)
matrxi(c(40, 30, 20, 30), ncol = 2)
matrxix(c(40, 30, 20, 30), ncol = 2)
matrix(c(40, 30, 20, 30), ncol = 2)
colnames(ds) = c(0,1)
ds = matrix(c(40, 30, 20, 30), ncol = 2)
colnames(ds) = c(0,1)
rownames(ds) = c(0,1)
chisq.test(ds)
ds = matrix(c(60, 30, 20, 30), ncol = 2)
rownames(ds) = c(0,1)
colnames(ds) = c(0,1)
chisq.test(ds)
sqrt( (SSf1 - (SP^2 / SSf0) ) /(n-2))
65 + 11.54895
65 - 11.54895
responseTypeNoFamiliarization
responseTypeNoFamiliarization = read.csv('noFamiliarizationTypeChangeFriend_50_exper.csv',header=TRUE, sep=",", row.names=NULL)
setwd("~/Documents/Stanford/Autumn2013-Masters/PayedWork/pragmods/data_andres")
responseTypeNoFamiliarization = read.csv('noFamiliarizationTypeChangeFriend_50_exper.csv',header=TRUE, sep=",", row.names=NULL)
responseTypeNoFamiliarization[responseTypeNoFamiliarization$Answer.15 == "\"friend\"",]
responseTypeNoFamiliarization[responseTypeNoFamiliarization$Answer.15 == "\"friend\"",]
responseTypeNoFamiliarization[responseTypeNoFamiliarization$Answer.14 == "\"friend\"",]
friend15 = responseTypeNoFamiliarization[responseTypeNoFamiliarization$Answer.14 == "\"friend\"",]
friend15 = responseTypeNoFamiliarization[responseTypeNoFamiliarization$Answer.15 == "\"friend\"",]
friend15
friend15[1]
friend15[,1]
friend15[,2]
friend15[,3]
friend15[,4]
friend15[2,]
friend15[3,]
friend15[1,]
friend15[7,]
friend15[7,10:20]
friend15[7,10:30]
friend15[7,10:32]
friend15[7,10:33]
friend15[7,10:32]
friend15[7,9:32]
friend15[7,8:32]
friend15[7,9:33]
friend15[7,9:34]
friend15 = responseTypeNoFamiliarization[responseTypeNoFamiliarization$Answer.15 == "\"friend\"", 9:32]
friend9 = responseTypeNoFamiliarization[responseTypeNoFamiliarization$Answer.9 == "\"friend\"", 9:32]
friend16 = responseTypeNoFamiliarization[responseTypeNoFamiliarization$Answer.16 == "\"friend\"", 9:32]
friend16
friend9[7,9:32]
friend9 = responseTypeNoFamiliarization[responseTypeNoFamiliarization$Answer.9 == "\"friend\"", 9:32]
friend9[7,9:32]
friend9
responseTypeNoFamiliarization
friend15
friend15[friend15$Answer.2 != -1,]
friend15[,1]
length(friend15[,1])
length(friend16[,1])
length(friend9[,1])
13 + 15 + 22
type_1 = friend15[friend15$Answer.2 != -1,]
type_1
type_2
type_2 = friend15[friend15$Answer.2 == -1,]
type_2
type_5 = friend16[friend16$Answer.2 != -1,]
type_6 = friend16[friend16$Answer.2 == -1,]
type_5
friend16
friend9
responseTypeNoFamiliarization$Answer.5
friend15$Answer.5
friend9$Answer.5
